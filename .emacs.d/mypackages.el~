
; GENERAL
;; Add MELPA repository for package management
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

;; Ensure that use-package is installed
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))



;; Install Evil mode and require at startup
(use-package evil
  :ensure t
  :config
  (evil-mode 1))


(use-package helm
  :ensure t
  :config
  (helm-mode 1)


; DEV - development extensions
;; Python programming extensions
(use-package elpy
  :ensure t
  :init
  (elpy-enable))

(use-package flycheck  ;; <-- Added missing opening parenthesis
  :ensure t
  :hook (python-mode . flycheck-mode))

(use-package py-autopep8
  :ensure t
  :hook (python-mode . py-autopep8-enable-on-save))

; SWIFT - swift specific extensions
;; Swift programming extensions
(use-package swift-mode
  :ensure t
  :hook (swift-mode . (lambda () (setq-local tab-width 2))))

(use-package lsp-sourcekit
  :after lsp-mode
  :config
  (setq lsp-sourcekit-executable "/usr/lib/swift/bin/sourcekit-lsp"))  ;; <-- Added missing closing parenthesis

(use-package lsp-mode
  :ensure t
  :hook ((swift-mode . lsp-deferred)
         (python-mode . lsp-deferred))
  :commands lsp-deferred)

; NEXT SECTION
